; Constants and state file.
; There are comments scattered through this file, so you may like to
; take a look if would like to learn more about the cns.

[Data]
life = 1000			;Amount of life to start with
power = 4000		;Amount of maximum power
attack = 100		;attack power (more is stronger)
defence = 100		;defensive power (more is stronger)
fall.defence_up = 50	;Percentage to increase defense everytime player is knocked down
liedown.time = 60		;Time which player lies down for, before getting up
airjuggle = 15		;Number of points for juggling
sparkno = 2			;Default hit spark number for HitDefs
guard.sparkno = 40	;Default guard spark number
KO.echo = 0			;1 to enable echo on KO
volume = 0			;Volume offset (negative for softer)
IntPersistIndex = 60	;Variables with this index and above will not have their values
FloatPersistIndex = 40  ;reset to 0 between rounds or matches. There are 60 int variables,
  				;indexed from 0 to 59, and 40 float variables, indexed from 0 to 39.
  				;If omitted, then it defaults to 60 and 40 for integer and float
  				;variables repectively, meaning that none are persistent, i.e. all
  				;are reset. If you want your variables to persist between matches,
  				;you need to override state 5900 from common1.cns.


[Size]
xscale = 1			;Horizontal scaling factor.
yscale = 1			;Vertical scaling factor.
ground.back = 15		;Player width (back, ground)
ground.front = 16		;Player width (front, ground)
air.back = 12		;Player width (back, air)
air.front = 12		;Player width (front, air)
height = 60			;Height of player (for opponent to jump over)
attack.dist = 160		;Default attack distance
proj.attack.dist = 90	;Default attack distance for projectiles
proj.doscale = 0		;Set to 1 to scale projectiles too   
head.pos = -5, -90	;Approximate position of head
mid.pos = -5, -60		;Approximate position of midsection
shadowoffset = 0		;Number of pixels to vertically offset the shadow
draw.offset = 0,0		;Player drawing offset in pixels (x, y)

[Velocity]
walk.fwd  = 2.4		;Walk forward
walk.back = -2.2		;Walk backward
run.fwd  = 4.6, 0		;Run forward (x, y)
run.back = -4.5,-3.8	;Hop backward (x, y)
jump.neu = 0,-8.4		;Neutral jumping velocity (x, y)
jump.back = -2.55		;Jump back Speed (x, y)
jump.fwd = 2.5		;Jump forward Speed (x, y)
runjump.back = -2.55,-8.1;Running jump speeds (opt)
runjump.fwd = 4,-8.1	;.
airjump.neu = 0,-8.1	;.
airjump.back = -2.55	;Air jump speeds (opt)
airjump.fwd = 2.5		;.

[Movement]
airjump.num = 1		;Number of air jumps allowed (opt)
airjump.height = 35	;Minimum distance from ground before you can air jump (opt)
yaccel = .44		;Vertical acceleration
stand.friction = .85	;Friction coefficient when standing
crouch.friction = .82	;Friction coefficient when crouching

;---------------------------------------------------------------------------
; Format:
; [Statedef STATENO]
; type = ?      S/C/A/L  stand/crouch/air/liedown
; movetype = ?  I/A/H    idle/attack/gethit
; physics = ?   S/C/A/N  stand/crouch/air/none
; juggle = ?             air juggle points move requires
;
; [State STATENO, ?]     ? - any number you choose
; type = ?
; ...

;---------------------------------------------------------------------------
; Lose by Time Over
; CNS difficulty: basic
[Statedef 170]
type = S
ctrl = 0
anim = 170
velset = 0,0

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 1
value = S7,7
volume = 10000
channel = 8

[state 200,2]
type = changeanim
triggerall = var(10) = 1
trigger1 = anim!= 10170
value = 10170

[State 170, 1]
type = NotHitBy
trigger1 = 1
value = SCA
time = 1

;---------------------------------------------------------------------------
; Win state decider
; CNS difficulty: basic
[Statedef 180]
type = S

[State 180, 1]
type = ChangeState
trigger1 = Time = 0
value = 181

;---------------------------------------------------------------------------
; Win pose 1
; CNS difficulty: basic
[Statedef 181]
type = S
ctrl = 0
anim = 180
velset = 0,0

[state 200,2]
type = changeanim
triggerall = var(10) = 1
trigger1 = anim!= 1180
value = 1180

[State 0, PlaySnd]
type = PlaySnd
triggerall = var(10) = 1
trigger1 = animelem = 2
value = S22,22
volume = 10000
channel = 12

[State 0, EnvShake]
type = EnvShake
triggerall = var(10) = 1
trigger1 = animelem = 2
time = 90
freq = 160
ampl = -5
phase = 190

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 1
value = S6,6
volume = 10000
channel = 8

[State 181, 1]
type = NotHitBy
trigger1 = 1
value = SCA
time = 1

;---------------------------------------------------------------------------
; Introduction
; CNS difficulty: basic
[Statedef 190]
type = S
ctrl = 0
anim = 180
velset = 0,0

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 2
value = S6,6
volume = 10000
channel = 8

[State 190, 1] ;Freeze animation until PreIntro is over
type = ChangeAnim
trigger1 = RoundState = 0
value = 180

[State 190, 2] ;Assert this until you want "round 1, fight" to begin
type = AssertSpecial
trigger1 = 1
flag = Intro

[State 190, 4] ;Change to stand state
type = ChangeState
trigger1 = AnimTime = 0
value = 0

;---------------------------------------------------------------------------

[Statedef 200]
type    = S                      ;State-type: S-stand, C-crouch, A-air, L-liedown
movetype= A                      ;Move-type: A-attack, I-idle, H-gethit
physics = S                      ;Physics: S-stand, C-crouch, A-air
juggle  = 1                      ;Number of air juggle points move takes
;Commonly-used controllers:
velset = 0,0                     ;Set velocity (x,y) (Def: no change)
ctrl = 0                         ;Set ctrl (Def: no change)
anim = 200                       ;Change animation (Def: no change)
poweradd = 25                   ;Power to add (Def: 0)
sprpriority = 2

[State 200, 2]
type = PlaySnd
trigger1 = AnimElem = 1
value = 8,8
volume = 500
channel = 3

[state 200,2]
type = changeanim
triggerall = var(10) = 1
trigger1 = anim!= 10200
value = 10200
            ;Set p1's sprite layering priority to 2 (in front)

[State 200, 1]
type = HitDef
triggerall = var(10) = 2
trigger1 = AnimElem = 2
attr = S, NA                     ;Attribute: Standing, Normal Attack
damage = 25, 12                   ;Damage that move inflicts, guard damage
animtype = Light                 ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 0, 8                 ;Time attacker pauses, time opponent shakes
sparkno = 0                      ;Spark anim no (Def: set above)
sparkxy = 0, -30               ;X-offset for the "hit spark" rel. to p2,
;Y-offset for the spark rel. to p1
hitsound = S1, 1                  ;Sound to play on hit
guardsound = S2, 2                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 0             ;Time that the opponent slides back
ground.hittime  = 10             ;Time opponent is in hit state
ground.velocity = -4             ;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3           ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 12


[State 200, 1]
type = HitDef
triggerall = var(10) = 0
trigger1 = AnimElem = 2
attr = S, NA                     ;Attribute: Standing, Normal Attack
damage = 25, 12                   ;Damage that move inflicts, guard damage
animtype = Light                 ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 0, 8                 ;Time attacker pauses, time opponent shakes
sparkno = 0                      ;Spark anim no (Def: set above)
sparkxy = 0, -30               ;X-offset for the "hit spark" rel. to p2,
;Y-offset for the spark rel. to p1
hitsound = S1, 1                  ;Sound to play on hit
guardsound = S2, 2                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 0             ;Time that the opponent slides back
ground.hittime  = 10             ;Time opponent is in hit state
ground.velocity = -4             ;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3           ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 12

[State 200, 1]
type = HitDef
triggerall = var(10) = 1
trigger1 = AnimElem = 3
attr = S, NA                     ;Attribute: Standing, Normal Attack
damage = 100, 100                   ;Damage that move inflicts, guard damage
animtype = Light                 ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 0, 0                 ;Time attacker pauses, time opponent shakes
sparkno = 0                      ;Spark anim no (Def: set above)
sparkxy = 0, -30               ;X-offset for the "hit spark" rel. to p2,
;Y-offset for the spark rel. to p1
hitsound = S1, 1                  ;Sound to play on hit
guardsound = S2, 2                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 0             ;Time that the opponent slides back
ground.hittime  = 10             ;Time opponent is in hit state
ground.velocity = -40             ;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3           ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 12
fall = 1           ;Time before opponent regains control in air


[State 200, 7]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Standing strong punch
; CNS difficulty: easy
; Note the width controller. It makes KFM's push box larger, so he doesn't
; stand so close to the opponent. Hit Ctrl-C and look at the red bar at his
; feet.
; The sprpriority for this state is at -1, instead of the usual 2 for
; attacks. This makes KFM appear behind the opponent initially.
; The SprPriority controller in [State 210, 4] brings KFM to the front when
; his arm has swung over.
; To stop KFM from pausing in his swing frame, there is a ChangeAnim in
; [State 210, 3] that detects if the hit has come in contact with the
; opponent during that frame, and switches to the next animation element
; (notice the elem=6 parameter). If you don't see what I mean, try commenting
; out that controller, then hit someone with this attack.
[Statedef 210]
type    = S
movetype= A
physics = S
juggle  = 4
poweradd= 16
ctrl = 0
velset = 0,0
anim = 210
sprpriority = -1

[State 200, 2]
type = PlaySnd
trigger1 = AnimElem = 1
triggerall = var(10) = 0
value = 9,9
volume = 500
channel = 3

[State 200, 2]
type = PlaySnd
trigger1 = AnimElem = 1
triggerall = var(10) = 1
value = 27,27
volume = 500
channel = 3

[State 210, Width]
type = Width
trigger1 = (AnimElemTime (2) >= 0) && (AnimElemTime (7) < 0)
value = 15,0

[state 200,2]
type = changeanim
triggerall = var(10) = 1
trigger1 = anim!= 10210
value = 10210

[State 210, 2]
type = HitDef
trigger1 = AnimElem = 3
attr = S, NA
triggerall = var(10) = 2
animtype  = Medium
damage    = 40, 20
guardflag = MA
pausetime = 0,12
sparkno = 1
sparkxy = 0,-30
hitsound   = S1,1
guardsound = S2,2
ground.type = High
ground.slidetime = 12
ground.hittime  = 0
ground.velocity = 20.5
air.velocity = 10.5
air.type = High
air.velocity = 8,7
air.hittime = 0

[State 210, 2]
type = HitDef
trigger1 = AnimElem = 3
attr = S, NA
triggerall = var(10) = 0
animtype  = Medium
damage    = 40, 20
guardflag = MA
pausetime = 0,12
sparkno = 1
sparkxy = 0,-30
hitsound   = S1,1
guardsound = S2,2
ground.type = High
ground.slidetime = 12
ground.hittime  = 0
ground.velocity = 20.5
air.velocity = 10.5
air.type = High
air.velocity = 8,7
air.hittime = 0

[State 210, 2]
type = HitDef
trigger1 = AnimElem = 3
attr = S, NA
triggerall = var(10) = 1
animtype  = Medium
damage    = 25, 12
guardflag = MA
pausetime = 0,12
sparkno = 1
sparkxy = 0,-30
hitsound   = S1,1
guardsound = S2,2
ground.type = High
ground.slidetime = 12
ground.hittime  = 0
ground.velocity = 20.5
air.velocity = 10.5
air.type = High
air.velocity = 8,7
air.hittime = 0

[State 210, 3]
type = ChangeAnim
trigger1 = AnimElemTime(5) > 0 && AnimElemTime(6) <= 0
trigger1 = movecontact
ignorehitpause = 1
persistent = 0
value = 210
elem = 6

[State 210, 4]
type = SprPriority
trigger1 = AnimElem = 5
value = 2

[State 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1
;---------------------------------------------------------------------------
; Standing strong kick
; CNS difficulty: easy
[Statedef 220]
type    = S
movetype= A
physics = S
juggle  = 4
poweradd= 16
ctrl = 0
velset = 0,0
anim = 220
sprpriority = -1

[State 220, Width]
type = Width
trigger1 = (AnimElemTime (2) >= 0) && (AnimElemTime (7) < 0)
value = 15,0

[State 200, 2]
type = PlaySnd
trigger1 = AnimElem = 1
triggerall = var(10) = 0
value = 10,10
volume = 500
channel = 3

[State 200, 2]
type = PlaySnd
trigger1 = AnimElem = 1
triggerall = var(10) = 1
value = 28,28
volume = 500
channel = 3

[state 200,2]
type = changeanim
triggerall = var(10) = 1
trigger1 = anim!= 10220
value = 10220


[State 220, 2]
type = HitDef
triggerall = var(10) = 2
trigger1 = AnimElem = 3
attr = S, NA
animtype  = Medium
damage    = 70, 60
guardflag = MA
pausetime = 0,0
sparkno = 11
sparkxy = -30,-30
hitsound   = S1,1
guardsound = S1,1
ground.type = High
ground.slidetime = 12
ground.hittime  = -10
ground.velocity = -6
air.velocity = 0
air.type = High
air.velocity = 8,7
air.hittime = 0

[State 220, 2]
type = HitDef
triggerall = var(10) = 0
trigger1 = AnimElem = 3
attr = S, NA
animtype  = Medium
damage    = 70, 60
guardflag = MA
pausetime = 0,0
sparkno = 11
sparkxy = -30,-30
hitsound   = S1,1
guardsound = S1,1
ground.type = High
ground.slidetime = 12
ground.hittime  = -10
ground.velocity = -6
air.velocity = 0
air.type = High
air.velocity = 8,7
air.hittime = 0

[State 220, 2]
type = HitDef
triggerall = var(10) = 1
trigger1 = AnimElem = 2
attr = S, NA
animtype  = Medium
damage    = 50, 40
guardflag = MA
pausetime = 1,0
sparkno = 11
sparkxy = -30,-30
hitsound   = S1,1
guardsound = S1,1
ground.type = High
ground.slidetime = 12
ground.hittime  = -10
ground.velocity = -6
air.velocity = 0
air.type = High
air.velocity = 8,7
air.hittime = 0

[State 220, 3]
type = ChangeAnim
trigger1 = AnimElemTime(5) > 0 && AnimElemTime(6) <= 0
trigger1 = movecontact
ignorehitpause = 1
persistent = 0
value = 220
elem = 6

[State 220, 3]
type = ChangeAnim
trigger1 = AnimElemTime(5) > 0 && AnimElemTime(6) <= 0
trigger1 = movecontact
triggerall = var(10) = 1
ignorehitpause = 1
persistent = 0
value = 10220
elem = 6

[State 220, 4]
type = SprPriority
trigger1 = AnimElem = 5
value = 2

[State 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Crouching Light Punch
; CNS difficulty: easy
; Description: Simple crouching attack. The HitDef's guardflag parameter
;     is set to "L", meaning that the move can only be guarded low
;     (crouching), and not by standing or jumping opponents.
;     Like for all light attacks, it's a good idea to keep the slidetime
;     and hittime parameters at a smaller number, so the opponent isn't
;     stunned for too long. For all crouching attacks you have to
;     remember to set the attr parameter to indicate that it is crouching
;     attack. In this case, "C, NA" stands for "crouching, normal attack".
;     The HitDef's priority is set at 3, instead of the default of 4,
;     so this attack has a lower priority than most others, meaning the
;     player will get hit instead of trading hits with the opponent if
;     their attack collision boxes (Clsn1) intersect each other's Clsn2
;     boxes at the same time.
[Statedef 400]
type    = C
movetype= A
physics = C
juggle  = 5
poweradd= 15
ctrl = 0
anim = 400

[State 400, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 11
ctrl = 1

;---------------------------------------------------------------------------
; Crouching Strong Punch
[StateDef 420]
type = S
movetype= A
physics = S
juggle  = 1
velset = 0,0
ctrl = 0
anim = 400
poweradd = 20
sprpriority = 2

[State 200, 2]
type = PlaySnd
trigger1 = AnimElem = 2
value = 9,9
volume = 500
channel = 3

[state 200,2]
type = changeanim
triggerall = var(10) = 1
trigger1 = anim!= 10400
value = 10400


[State 420, 1]
type = HitDef
triggerall = var(10) = 0
trigger1 = AnimElem = 3
attr = S, NA
animtype  = Up
damage    = 40,35
pausetime = 0,0
sparkno = 111
sparkxy = -25,-55
hitsound   = S1,1
guardsound = S2,2
ground.type = Low
ground.slidetime = 0
ground.hittime  = 0
ground.velocity = 0,-10
air.velocity = 0,-10
p2facing = 1
fall = 1
air.fall = 1
fall.recover = 0
kill = 1


[State 420, 1]
type = HitDef
triggerall = var(10) = 2
trigger1 = AnimElem = 3
attr = S, NA
animtype  = Up
damage    = 40,35
pausetime = 0,0
sparkno = 111
sparkxy = -25,-55
hitsound   = S1,1
guardsound = S2,2
ground.type = Low
ground.slidetime = 0
ground.hittime  = 0
ground.velocity = 0,-10
air.velocity = 0,-10
p2facing = 1
fall = 1
air.fall = 1
fall.recover = 0
kill = 1

[State 420, 1]
type = HitDef
triggerall = var(10) = 1
trigger1 = AnimElem = 3
attr = S, NA
animtype  = Up
damage    = 100,100
pausetime = 0,0
sparkno = 111
sparkxy = -25,-55
hitsound   = S1,1
guardsound = S2,2
ground.type = Low
ground.slidetime = 0
ground.hittime  = 0
ground.velocity = 0,-15
air.velocity = 0,-15
p2facing = 1
fall = 1
air.fall = 1
fall.recover = 0
kill = 1

[State 420, end]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1
;---------------------------------------------------------------------------
; Crouch Strong Kick
; CNS difficulty: easy
; Description: This move uses "Trip" for the "ground.type" parameter in
;     its HitDef. It's a special type that puts the opponent in a tripped
;     animation as he falls. Also, the hitflag parameter in the HitDef
;     is set to "MAFD". The "D" indicates that a downed opponent can be
;     hit by the attack.
[Statedef 450]
type    = C
movetype= A
physics = C
juggle  = 7
poweradd= 70
ctrl = 0
anim = 450

[State 450, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 11
ctrl = 1

;---------------------------------------------------------------------------
; Jump Light Punch
; CNS difficulty: easy
[StateDef 600]
type = A
movetype= A
physics = A
juggle  = 1
velset = 0,0
ctrl = 0
anim = 600
poweradd = 20
sprpriority = 2

[State 200, 2]
type = PlaySnd
trigger1 = AnimElem = 1
value = 8,8
volume = 500
channel = 3

[state 200,2]
type = changeanim
triggerall = var(10) = 1
trigger1 = anim!= 10600
value = 10600

[State 600, 1]
type = HitDef
trigger1 = AnimElem = 3
triggerall = var(10) = 2
attr = S, NA
damage = 30, 20
animtype = Light
guardflag = MA
hitflag = MAF
priority = 3, Hit
pausetime = 0, 10
sparkno = 0
sparkxy = -10, -36
hitsound = S1, 1
guardsound = S2, 2
ground.type = High
ground.slidetime = 5
ground.hittime  = 12
ground.velocity = -4
airguard.velocity = -1.9,-.8
air.type = High
air.velocity = -1.4,-3
air.hittime = 12


[State 600, 1]
type = HitDef
trigger1 = AnimElem = 3
triggerall = var(10) = 0
attr = S, NA
damage = 30, 20
animtype = Light
guardflag = MA
hitflag = MAF
priority = 3, Hit
pausetime = 0, 10
sparkno = 0
sparkxy = -10, -36
hitsound = S1, 1
guardsound = S2, 2
ground.type = High
ground.slidetime = 5
ground.hittime  = 12
ground.velocity = -4
airguard.velocity = -1.9,-.8
air.type = High
air.velocity = -1.4,-3
air.hittime = 12

[State 600, 1]
type = HitDef
trigger1 = AnimElem = 3
triggerall = var(10) = 1
attr = S, NA
damage = 100, 100
animtype = Light
guardflag = MA
hitflag = MAF
priority = 3, Hit
pausetime = 0, 0
sparkno = 0
sparkxy = -10, -36
hitsound = S1, 1
guardsound = S2, 2
ground.type = High
ground.slidetime = 5
ground.hittime  = 12
ground.velocity = -40
airguard.velocity = -1.9,-.8
air.type = High
air.velocity = -1.4,-3
air.hittime = 12
fall = 1

[State 600, DestroySelf]
type = DestroySelf
trigger1 = time = 20


[statedef 666]
type = S
Movetype = I
physics = S
Anim = 666
poweradd = 15
ctrl = 0

[State 200, 2]
type = PlaySnd
trigger1 = AnimElem = 1
value = 5,5
volume = 500
channel = 3

[state 200,2]
type = changeanim
triggerall = var(10) = 1
trigger1 = anim!= 1666
value = 1666

[state 666 ,1]
type = posadd
trigger1 = animelem = 2
x = (P2BodyDist X+70)

[state 666 ,2]
type = changestate
trigger1 = animtime = 0
value = 0
ctrl = 1

[State 666, 3]
type = Turn
trigger1 = Animelem = 3
;---------------------------------------------------------------------------
[Statedef 444]
type    = S
movetype= A
physics = S
juggle  = 4
poweradd= 0
ctrl = 0
velset = 0,0
anim = 444

[state 200,2]
type = changeanim
triggerall = var(10) = 1
trigger1 = anim!= 1444
value = 1444

[State 200, 2]
type = PlaySnd
trigger1 = AnimElem = 1
triggerall = var(10) = 0
value = 11,11
volume = 500
channel = 3

[State 200, 2]
type = PlaySnd
trigger1 = AnimElem = 1
triggerall = var(10) = 2
value = 11,11
volume = 500
channel = 3

[State 200, 2]
type = PlaySnd
trigger1 = AnimElem = 1
triggerall = var(10) = 1
value = 10,10
volume = 500
channel = 3

[State 444, PowerAdd]
type = PowerAdd
triggerall = var(10) = 0
trigger1 = command = "hold_a"
value = 5


[State 444, PowerAdd]
type = PowerAdd
triggerall = var(10) = 2
trigger1 = command = "hold_a"
value = 5


[State 444, PowerAdd]
type = PowerAdd
triggerall = var(10) = 1
trigger1 = command = "hold_a"
value = 25

[State 0, LifeAdd]
type = LifeAdd
triggerall = var(10) = 1
trigger1 = Animelem = 1
trigger2 = Animelem = 2
value = -25
kill = 0

[State 444, destroyself]
type = ChangeState
trigger1 = command != "hold_a"
trigger2 = power = 6000
value = 0
ctrl = 1


[Statedef 999]
type    = S
movetype= A
physics = S
juggle  = 0
poweradd= 11
ctrl = 0
anim = 999
sprpriority = 2

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 3
value = S3,3

[State 3010,2]
triggerall = var(40) = 0
type = helper
trigger1 = AnimElem = 2
name = "Kunai"
id = 3020
pos = 0,0
postype = p1
stateno = 3020
helpertype = normal
ownpal = 1
keyctrl = 1


[State 3010, 4]
type = changestate
trigger1 = animTime = 0
value = 0
ctrl = 1

;Throw Kunai
[Statedef 3020]
type    = S
movetype= A
physics = S
juggle  = 4
poweradd= 0
ctrl = 0
velset = 0,0
anim = 950
sprpriority = 8

[State 3020, 1]
type = VelSet
triggerall = var(40) = 0
Trigger1 = animelem = 1
Trigger2 = animelem = 2
x = 30
y = 0

[State 3020, 4]
type = SprPriority
triggerall = var(40) = 0
trigger1 = 1
value = 4

[State 3020, 3]
type = ScreenBound
triggerall = var(40) = 0
trigger1 = 1
value =  0

[State 3020,***]
type = HitDef
triggerall = var(40) = 0
trigger1 = Time = 0
attr = S, NP
damage = 25, 12
animtype = Light
guardflag = MA
hitflag = MAF
priority = 3, Hit
pausetime = 0, 2
sparkno = 11
sparkxy = -0, -30
hitsound = S4, 4
guardsound = S2, 2
ground.type = High
ground.slidetime = 5
ground.hittime  = 20
ground.velocity = -4
airguard.velocity = -1.9,-.8
air.type = High
air.velocity = -1.4,-3
air.hittime = 12

[State 3020, 3]
type = destroyself
trigger1 = movecontact
trigger2 = frontedgedist < -50

[StateDef 1111]
type = S
movetype= A
physics = S
juggle  = 1
velset = 0,0
ctrl = 0
anim = 1111
poweradd = -2000
sprpriority = 2

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 3
value = S5,5
volume = 10000
channel = 8

[state 666 ,1]
type = posadd
trigger1 = animelem = 3
x = (P2BodyDist X+20)

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 8
value = S13,13
volume = 10000
channel = 8

[State 420, 1]
type = HitDef
triggerall = var(10) = 0
trigger1 = AnimElem = 8
attr = S, NA
animtype  = Up
damage    = 100,95
pausetime = 0,0
sparkno = 111
sparkxy = -25,-55
hitsound   = S1,1
guardsound = S2,2
ground.type = Low
ground.slidetime = 0
ground.hittime  = 0
ground.velocity = 0,-11
air.velocity = 0,-11
p2facing = 1
fall = 1
air.fall = 1
fall.recover = 0
kill = 1

[State 1111, end]
type = ChangeState
trigger1 = AnimTime = 0
value = 1112
ctrl = 1

[StateDef 12221]
type = S
movetype= A
physics = S
juggle  = 1
velset = 0,0
ctrl = 0
anim = 0
poweradd = 0
sprpriority = 2


[State 7000, Explod]
type = Explod
trigger1 = AnimElem = 1
anim = 12221
pos = 0,0
postype = p1 ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = -1
removetime = -2
scale = 1,1
ontop = 1


[State 0, ChangeState]
type = ChangeState
trigger1 = animtime =0
value = 0
ctrl = 1


[StateDef 1112]
type = S
movetype= A
physics = S
juggle  = 1
velset = 0,0
ctrl = 0
anim = 1112
poweradd = 0
sprpriority = 2

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 1
value = S5,5
volume = 10000
channel = 15

[state 666 ,1]
type = posadd
trigger1 = animelem = 1
x = (P2BodyDist X+20)
y = (P2BodyDist Y)

[State 1112, 1]
type = HitDef
trigger1 = AnimElem = 1
attr = S, NA
damage = 0
animtype = Light
guardflag = MA
hitflag = MAF
priority = 3, Hit
pausetime = 0, 100
ground.type = High
ground.slidetime = 5
ground.hittime  = 12
ground.velocity = 0
airguard.velocity = -1.9,-.8
air.type = High
air.velocity = -1.4,-3
air.hittime = 12

[State 1112, 1]
type = HitDef
trigger1 = AnimElem = 8
attr = S, NA
damage = 100,95
animtype = Light
guardflag = MA
hitflag = MAF
priority = 3, Hit
pausetime = 0, 100
sparkno = 0
sparkxy = -10, -76
hitsound = S1, 1
guardsound = S2, 2
ground.type = High
ground.slidetime = 5
ground.hittime  = 12
ground.velocity = -4
airguard.velocity = -1.9,-.8
air.type = High
air.velocity = -1.4,-3
air.hittime = 12

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 11
value = S14,14
volume = 10000
channel = 15


[State 1112, 1]
type = HitDef
trigger1 = AnimElem = 15
attr = S, NA
damage = 100,95
animtype = Light
guardflag = MA
hitflag = MAF
priority = 3, Hit
pausetime = 0, 100
sparkno = 0
sparkxy = -10, -76
hitsound = S1, 1
guardsound = S2, 2
ground.type = High
ground.slidetime = 5
ground.hittime  = 12
ground.velocity = -4
airguard.velocity = -1.9,-.8
air.type = High
air.velocity = -1.4,-3
air.hittime = 12


[State 1111, end]
type = ChangeState
trigger1 = AnimTime = 0
value = 6000
ctrl = 1


[StateDef 6000]
type = A
movetype= A
physics = A
juggle  = 1
velset = 0,0
ctrl = 0
anim = 600
poweradd = 0
sprpriority = 2

[state 200,2]
type = changeanim
triggerall = var(10) = 1
trigger1 = anim!= 10600
value = 10600

[State 600, 1]
type = HitDef
trigger1 = AnimElem = 3
triggerall = var(10) = 0
attr = S, NA
animtype  = Up
damage    = 100,95
pausetime = 0,0
sparkno = 111
sparkxy = -25,-55
hitsound   = S1,1
guardsound = S2,2
ground.type = Low
ground.slidetime = 0
ground.hittime  = 0
ground.velocity = 0,10
air.velocity = 0,10
p2facing = 1
fall = 1
air.fall = 1
fall.recover = 0
kill = 1

[State 600, 1]
type = HitDef
trigger1 = AnimElem = 3
triggerall = var(10) = 1
attr = S, NA
damage = 30, 20
animtype = Light
guardflag = MA
hitflag = MAF
priority = 3, Hit
pausetime = 0, 10
sparkno = 0
sparkxy = -10, -36
hitsound = S1, 1
guardsound = S2, 2
ground.type = High
ground.slidetime = 5
ground.hittime  = 12
ground.velocity = -4
airguard.velocity = -1.9,-.8
air.type = High
air.velocity = -1.4,-3
air.hittime = 12

[State 600, DestroySelf]
type = DestroySelf
trigger1 = time = 20


;Omote Renge1
[Statedef 1500]
type    = S                      ;State-type: S-stand, C-crouch, A-air, L-liedown
movetype= A                      ;Move-type: A-attack, I-idle, H-gethit
physics = S                      ;Physics: S-stand, C-crouch, A-air
juggle  = 1                      ;Number of air juggle points move takes
;Commonly-used controllers:
velset = 0,0                     ;Set velocity (x,y) (Def: no change)
ctrl = 0                         ;Set ctrl (Def: no change)
anim = 1500                       ;Change animation (Def: no change)
poweradd = 0                    ;Power to add (Def: 0)
sprpriority = 2

[State 10000]
type = SuperPause
trigger1 = Time = 1
time = 91
movetime = 91
pos = 0, 0
darken = 0
poweradd = 0

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem =17
value = S15,15
volume = 10000
channel = -2               ;Set p1's sprite layering priority to 2 (in front)

[State 200, 1]
type = HitDef
trigger1 = time = 1
attr = S, NA                     ;Attribute: Standing, Normal Attack
damage = 100, 95                   ;Damage that move inflicts, guard damage
animtype = Light                 ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 0, 2                 ;Time attacker pauses, time opponent shakes
sparkno = S4002                      ;Spark anim no (Def: set above)
sparkxy = -10, -40               ;X-offset for the "hit spark" rel. to p2,
;Y-offset for the spark rel. to p1
hitsound = S100, 0                  ;Sound to play on hit
guardsound = 6, 0                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5             ;Time that the opponent slides back
ground.hittime  = 10             ;Time opponent is in hit state
ground.velocity = 0,-15.2            ;Velocity at which opponent is pushed
airguard.velocity = 0,-15.2     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = 0,-15.2           ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 12                 ;Time before opponent regains control in air
fall = 1
fall.recover = 0
p1stateno = 1501

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 12
value = S5,5
volume = 10000
channel = 8

[State 0, PosAdd]
type = PosAdd
trigger1 = animelem = 12
x = p2dist x + 0
y = 0

[State 200, 7]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1
;---------------------------------------------------------------------------
;Omote Renge2
[Statedef 1501]
type    = S                      ;State-type: S-stand, C-crouch, A-air, L-liedown
movetype= A                      ;Move-type: A-attack, I-idle, H-gethit
physics = S                      ;Physics: S-stand, C-crouch, A-air
juggle  = 1                      ;Number of air juggle points move takes
;Commonly-used controllers:
velset = 0,0                     ;Set velocity (x,y) (Def: no change)
ctrl = 0                         ;Set ctrl (Def: no change)
anim = 1501                       ;Change animation (Def: no change)
poweradd = -3000                    ;Power to add (Def: 0)
sprpriority = 2                  ;Set p1's sprite layering priority to 2 (in front)

[State 200, 1]
type = HitDef
trigger1 = time = 1
attr = S, NA                     ;Attribute: Standing, Normal Attack
damage = 0, 0                   ;Damage that move inflicts, guard damage
animtype = Light                 ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 0, 0                 ;Time attacker pauses, time opponent shakes
sparkno = -1                      ;Spark anim no (Def: set above)
sparkxy = -10, -35               ;X-offset for the "hit spark" rel. to p2,
;Y-offset for the spark rel. to p1
hitsound = S100, 0                  ;Sound to play on hit
guardsound = 6, 0                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5             ;Time that the opponent slides back
ground.hittime  = 10             ;Time opponent is in hit state
ground.velocity = 0,0            ;Velocity at which opponent is pushed
airguard.velocity = 0,0     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = 0,0           ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 12                 ;Time before opponent regains control in air
p1stateno = 1502
p2stateno = 905

[State 0, Posadd]
type = Posadd
trigger1 = animelem = 4
x = 0
y = -70

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 4
value = S5,5
volume = 10000
channel = 8

[State 0, VelSet]
type = VelSet
trigger1 = time >= 26
x = 0
y = -10

[State 200, 7]
type = ChangeState
trigger1 = time = 120
value = 50
ctrl = 1

;---------------------------------------------------------------------------
;OMOTE RENGE!
[Statedef 1502]
type    = S                     ;State-type: S-stand, C-crouch, A-air, L-liedown
movetype= A                      ;Move-type: A-attack, I-idle, H-gethit
physics = S                      ;Physics: S-stand, C-crouch, A-air
juggle  = 1                      ;Number of air juggle points move takes
;Commonly-used controllers:
velset = 0,0                     ;Set velocity (x,y) (Def: no change)
ctrl = 0                         ;Set ctrl (Def: no change)
anim = 1502                       ;Change animation (Def: no change)
poweradd = -1300                    ;Power to add (Def: 0)
sprpriority = 2                  ;Set p1's sprite layering priority to 2 (in front)

[State 0, VarSet]
type = VarSet
trigger1 = animelem = 7
fv = 15
value = 0

[State 0, Varadd]
type = Varadd
trigger1 = time > 24
trigger1 = command = "x"
fv = 15
value = 10

[State 200, 1]
type = HitDef
trigger1 = time = 1
attr = S, NA                     ;Attribute: Standing, Normal Attack
damage = 0, 0                   ;Damage that move inflicts, guard damage
animtype = Light                 ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 0, 120                 ;Time attacker pauses, time opponent shakes
sparkno = -1                      ;Spark anim no (Def: set above)
sparkxy = -10, -35               ;X-offset for the "hit spark" rel. to p2,
;Y-offset for the spark rel. to p1
hitsound = 456, 0                  ;Sound to play on hit
guardsound = 6, 0                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5             ;Time that the opponent slides back
ground.hittime  = 10             ;Time opponent is in hit state
ground.velocity = 0,0            ;Velocity at which opponent is pushed
airguard.velocity = 0,0     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = 0,0           ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 12                 ;Time before opponent regains control in air
p2stateno = 5214

[State 0, PlaySnd]
type = PlaySnd
trigger1 = time = 10
value = S18,18
volume = 10000
channel = 8

[State 200, 1]
type = HitDef
trigger1 = pos Y > 1
attr = S, NA                     ;Attribute: Standing, Normal Attack
damage = 400,400                 ;Damage that move inflicts, guard damage
animtype = Light                 ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 0, 0                 ;Time attacker pauses, time opponent shakes
sparkno = S4010                      ;Spark anim no (Def: set above)
sparkxy = -10, -20               ;X-offset for the "hit spark" rel. to p2,
;Y-offset for the spark rel. to p1
hitsound = S1500, 2                  ;Sound to play on hit
guardsound = 6, 0                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5             ;Time that the opponent slides back
ground.hittime  = 10             ;Time opponent is in hit state
ground.velocity = 0,20            ;Velocity at which opponent is pushed
airguard.velocity = 0,20     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = 0,20           ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 12                 ;Time before opponent regains control in air
p1stateno = 1503
fall = 1
fall.damage = 100

[State 0, EnvShake]
type = EnvShake
trigger1 = pos Y > 1
time = 40
freq = 160
ampl = -5
phase = 190


[State 0, PlaySnd]
type = PlaySnd
trigger1 = pos Y > 1
value = S12,12
volume = 10000
channel = 8


[State 0, Explod]
type = Explod
trigger1 = pos Y > 1
anim = 906
ID = 906
pos = 20,-10
postype = p1  ;p2,front,back,left,right
ontop = 0



[State 0, AfterImage]
type = AfterImage
trigger1 = animelem = 8
time = 27
length = 10
palbright = 10,15,20
palcontrast = 210,220,230
paladd = 0,0,0
palmul = 1,1.1,1.2
timegap = 2
framegap = 1
trans = add1

[State 0, TargetBind]
type = TargetBind
trigger1 = 1
time = 1
id = -1
pos = 0,0

[State 0, VelSet]
type = VelSet
trigger1 = animelem = 1
x = 2
y = -3

[State 0, VelSet]
type = VelSet
trigger1 = time >= 9 && time <= 12
x = 1
y = -1

[State 0, VelSet]
type = VelSet
trigger1 = time >= 12 && time <= 20
x = .5
y = 1

[State 0, VelSet]
type = VelSet
trigger1 = time >= 20 && time <= 35
x = 0
y = 1

[State 0, VelSet]
type = VelSet
trigger1 = time >= 36
x = 0
y = 10


[State 200, 7]
type = ChangeState
trigger1 = Time = 150
value = 1503
ctrl = 1

;---------------------------------------------------------------------------
;OMOTE RENGE end
[Statedef 1503]
type    = S                      ;State-type: S-stand, C-crouch, A-air, L-liedown
movetype= A                      ;Move-type: A-attack, I-idle, H-gethit
physics = S                      ;Physics: S-stand, C-crouch, A-air
juggle  = 1                      ;Number of air juggle points move takes
;Commonly-used controllers:
velset = 0,0                     ;Set velocity (x,y) (Def: no change)
ctrl = 0                         ;Set ctrl (Def: no change)
anim = 43                       ;Change animation (Def: no change)
poweradd = 0                    ;Power to add (Def: 0)
sprpriority = 2                  ;Set p1's sprite layering priority to 2 (in front)

[State 0, Velset]
type = Velset
trigger1 = time = 1
x = -15
y = -4

[State 0, ChangeState]
type = ChangeState
trigger1 = time = 10
value = 50
ctrl = 1


[Statedef 905]
type    = A
movetype= H
physics = N
sprpriority = -14

[State 905, 1]
type = ChangeAnim2
Trigger1 = Time = 0
value = 905

[State 905]
type = AssertSpecial
trigger1 =  1
flag = invisible

[State 905]
type = SelfState
triggerall = (Vel y > 0) && (Pos y >= 0)
trigger1 = AnimTime = 0
value = 5100

;Ura Renge
[Statedef 12345]
type    = S                      ;State-type: S-stand, C-crouch, A-air, L-liedown
movetype= A                      ;Move-type: A-attack, I-idle, H-gethit
physics = S                      ;Physics: S-stand, C-crouch, A-air
juggle  = 1                      ;Number of air juggle points move takes
;Commonly-used controllers:
velset = 0,0                     ;Set velocity (x,y) (Def: no change)
ctrl = 0                         ;Set ctrl (Def: no change)
anim = 2500                       ;Change animation (Def: no change)
poweradd = 0                    ;Power to add (Def: 0)
sprpriority = 2                  ;Set p1's sprite layering priority to 2 (in front)

[State 200, 1]
type = HitDef
trigger1 = time = 1
attr = S, NA                     ;Attribute: Standing, Normal Attack
damage = 50, 0                   ;Damage that move inflicts, guard damage
animtype = Light                 ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 0, 2                 ;Time attacker pauses, time opponent shakes
sparkno = S4002                      ;Spark anim no (Def: set above)
sparkxy = -10, -40               ;X-offset for the "hit spark" rel. to p2,
;Y-offset for the spark rel. to p1
hitsound = S100, 0                  ;Sound to play on hit
guardsound = 6, 0                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5             ;Time that the opponent slides back
ground.hittime  = 10             ;Time opponent is in hit state
ground.velocity = 0,-12            ;Velocity at which opponent is pushed
airguard.velocity = 0,-12     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = 0,-12           ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 12                 ;Time before opponent regains control in air
p1stateno = 2510

[State 0, AssertSpecial]
type = AssertSpecial
trigger1 = 1
flag = nobardisplay
flag2 = unguardable



[State 0, Explod]
type = Explod
trigger1 = animelem = 1
anim = 4015
ID = 4015
pos = 0,0
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
removetime = 16
scale = .8,.8
sprpriority = 0
ontop = 1
removeongethit = 0
pausemovetime = 250
supermovetime = 250

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 3
value = S5,5
volume = 10000
channel = 8

[State 0, PosAdd]
type = PosAdd
trigger1 = animelem = 3
x = p2dist x + 0
y = 0

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 9
value = S5,5
volume = 10000
channel = 8

[State 0, PosAdd]
type = PosAdd
trigger1 = animelem = 9
x = p2dist x + 500
y = 0

[State 200, 7]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
;Ura Renge1
[Statedef 2510]
type    = S                      ;State-type: S-stand, C-crouch, A-air, L-liedown
movetype= A                      ;Move-type: A-attack, I-idle, H-gethit
physics = S                      ;Physics: S-stand, C-crouch, A-air
juggle  = 1                      ;Number of air juggle points move takes
;Commonly-used controllers:
velset = 0,0                     ;Set velocity (x,y) (Def: no change)
ctrl = 0                         ;Set ctrl (Def: no change)
anim = 2510                       ;Change animation (Def: no change)
poweradd = 0                    ;Power to add (Def: 0)
sprpriority = 2                  ;Set p1's sprite layering priority to 2 (in front)

[State 200, 1]
type = HitDef
trigger1 = time = 1
attr = S, NA                     ;Attribute: Standing, Normal Attack
damage = 50, 0                   ;Damage that move inflicts, guard damage
animtype = Light                 ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 0, 60                 ;Time attacker pauses, time opponent shakes
sparkno = S4002                      ;Spark anim no (Def: set above)
sparkxy = -10, -40               ;X-offset for the "hit spark" rel. to p2,
;Y-offset for the spark rel. to p1
hitsound = S100, 0                  ;Sound to play on hit
guardsound = 6, 0                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5             ;Time that the opponent slides back
ground.hittime  = 10             ;Time opponent is in hit state
ground.velocity = 0,0            ;Velocity at which opponent is pushed
airguard.velocity = 0,0    ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = 0,0           ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 12                 ;Time before opponent regains control in air

[State 0, AssertSpecial]
type = AssertSpecial
trigger1 = 1
flag = nobardisplay
flag2 = unguardable

[State 0, Explod]
type = Explod
trigger1 = animelem = 2
anim = 4017
ID = 4017
pos = 0,0
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
removetime = 16
scale = 1,1
sprpriority = 0
ontop = 1
removeongethit = 0
pausemovetime = 99
supermovetime = 99

[State 0, VelSet]
type = Velset
trigger1 = time > 41
x = 0
y = 12

[State 0, VelSet]
type = Velset
trigger1 = animtime = 0
x = 0
y = 0


[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 4
value = S5,5
volume = 10000
channel = 8

[State 0, PosAdd]
type = PosAdd
trigger1 = animelem = 4
x = p2dist x + 0
y = p2dist y + -170

[State 0, TargetVelSet]
type = TargetVelSet
trigger1 = 1
x = 0
y = 0
ID = 1

[State 200, 7]
type = ChangeState
trigger1 = AnimTime = 0
value = 2520
ctrl = 1

;---------------------------------------------------------------------------
;Ura Renge1
[Statedef 2520]
type    = S                      ;State-type: S-stand, C-crouch, A-air, L-liedown
movetype= A                      ;Move-type: A-attack, I-idle, H-gethit
physics = S                      ;Physics: S-stand, C-crouch, A-air
juggle  = 1                      ;Number of air juggle points move takes
;Commonly-used controllers:
velset = 0,0                     ;Set velocity (x,y) (Def: no change)
ctrl = 0                         ;Set ctrl (Def: no change)
anim = 2520                       ;Change animation (Def: no change)
poweradd = -4000                    ;Power to add (Def: 0)
sprpriority = 2                  ;Set p1's sprite layering priority to 2 (in front)

[State 0, VarSet]
type = VarSet
trigger1 = time = 1
fv = 15
value = 0

[State 0, VarSet]
type = VarSet
trigger1 = command = "x"
trigger1 = time >= 2
fv = 15
value = 9

[State 200, 1]
type = HitDef
trigger1 = animelem = 6
trigger2 = animelem = 9
trigger3 = animelem = 12
trigger4 = animelem = 15
trigger5 = animelem = 18
trigger6 = animelem = 21
trigger7 = animelem = 24
trigger8 = animelem = 27
trigger9 = animelem = 30
trigger10 = animelem = 33
trigger11 = animelem = 36
trigger12 = animelem = 39
trigger13 = animelem = 42
trigger14 = animelem = 45
trigger15 = animelem = 48
trigger16 = animelem = 51
attr = S, NA                     ;Attribute: Standing, Normal Attack
damage = 12+fvar(15), 0                   ;Damage that move inflicts, guard damage
animtype = Light                 ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 0, 60                 ;Time attacker pauses, time opponent shakes
sparkno = S4002                      ;Spark anim no (Def: set above)
sparkxy = -10, -40               ;X-offset for the "hit spark" rel. to p2,
;Y-offset for the spark rel. to p1
hitsound = S1, 1                  ;Sound to play on hit
guardsound = S2, 2                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5             ;Time that the opponent slides back
ground.hittime  = 10             ;Time opponent is in hit state
ground.velocity = 0,0            ;Velocity at which opponent is pushed
airguard.velocity = 0,0    ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = 0,0           ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 12                 ;Time before opponent regains control in air

[State 0, AssertSpecial]
type = AssertSpecial
trigger1 = 1
flag = nobardisplay
flag2 = unguardable

[State 0, Explod] ;left
type = Explod
trigger1 = time = 1
trigger2 = time = 21
trigger3 = time = 102
trigger4 = time = 130
anim = 4012
ID = 4012
pos = -30,0
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
removetime = 12
scale = .8,.8
sprpriority = 0
ontop = 1
removeongethit = 0
pausemovetime = 99
supermovetime = 99

[State 0, Explod] ;right
type = Explod
trigger1 = time = 64
anim = 4012
ID = 4012
pos = 30,0
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
removetime = 12
scale = .8,.8
sprpriority = 0
ontop = 1
removeongethit = 0
pausemovetime = 99
supermovetime = 99

[State 0, Explod] ;lower left
type = Explod
trigger1 = time = 78
trigger2 = time = 116
anim = 4020
ID = 4020
pos = -30,30
postype = p1  ;p2,front,back,left,right
facing = -1
vfacing = 1
bindtime = 1
removetime = 12
scale = .8,.8
sprpriority = 0
ontop = 1
removeongethit = 0
pausemovetime = 99
supermovetime = 99

[State 0, Explod] ;upper left
type = Explod
trigger1 = time = 50
anim = 4020
ID = 4020
pos = -30,-30
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
removetime = 12
scale = .8,.8
sprpriority = 0
ontop = 1
removeongethit = 0
pausemovetime = 99
supermovetime = 99

[State 0, Explod] ;lower right
type = Explod
trigger1 = time = 6
trigger2 = time = 94
trigger3 = time = 109
trigger4 = time = 137
anim = 4020
ID = 4020
pos = 30,30
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
removetime = 12
scale = .8,.8
sprpriority = 0
ontop = 1
removeongethit = 0
pausemovetime = 99
supermovetime = 99

[State 0, Explod] ;upper right
type = Explod
trigger1 = time = 36
trigger2 = time = 144
anim = 4020
ID = 4020
pos = 30,-30
postype = p1  ;p2,front,back,left,right
facing = -1
vfacing = 1
bindtime = 1
removetime = 12
scale = .8,.8
sprpriority = 0
ontop = 1
removeongethit = 0
pausemovetime = 99
supermovetime = 99

[State 0, Explod] ;down
type = Explod
trigger1 = time = 123
anim = 4011
ID = 4011
pos = 0,-30
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
removetime = 12
scale = 1,1
sprpriority = 0
ontop = 1
removeongethit = 0
pausemovetime = 99
supermovetime = 99

[State 0, Explod] ;up
type = Explod
trigger1 = time = 151
anim = 4011
ID = 4011
pos = 0,30
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
removetime = 12
scale = 1,1
sprpriority = 0
ontop = 1
removeongethit = 0
pausemovetime = 99
supermovetime = 99

[State 0, VelSet]
type = VelSet
trigger1 = 1
x = 0
y = 0

[State 0, VelSet] ;upper left
type = VelSet
trigger1 = time >= 6 && time <= 15
x = -14
y = -16

[State 0, VelSet] ;upper left
type = VelSet
trigger1 = time >= 97 && time <= 101
trigger2 = time >= 112 && time <= 115
trigger3 = time >= 140 && time <= 143
x = -26
y = -28

[State 0, VelSet] ;right
type = VelSet
trigger1 = time >= 25 && time <= 35
x = 16
y = 0

[State 0, VelSet] ;right
type = VelSet
trigger1 = time >= 105 && time <= 108
trigger2 = time >= 133 && time <= 136
x = 40
y = 0

[State 0, VelSet] ;lower left
type = VelSet
trigger1 = time >= 39 && time <= 49
x = -14
y = 16

[State 0, VelSet] ;lower left
type = VelSet
trigger1 = time >= 147 && time <= 150
x = -38
y = 40

[State 0, VelSet] ;lower right
type = VelSet
trigger1 = time >= 53 && time <= 63
x = 14
y = 16

[State 0, VelSet] ;left
type = VelSet
trigger1 = time >= 67 && time <= 75
x = -16
y = 0

[State 0, VelSet] ;upper right
type = VelSet
trigger1 = time >= 79 && time <= 85
x = 14
y = -16

[State 0, VelSet] ;upper right
type = VelSet
trigger1 = time >= 119 && time <= 122
x = 38
y = -40

[State 0, VelSet] ;low
type = VelSet
trigger1 = time >= 89 && time <= 93
trigger2 = time >= 126 && time <= 129
x = 0
y = 40

[State 0, VelSet] ;up
type = VelSet
trigger1 = time >= 154 && time <= 157
x = 0
y = -45

[State 0, PosAdd] ;low
type = PosAdd
trigger1 = time = 1
trigger2 = time = 151
x = p2dist x + 0
y = p2dist y + 60

[State 0, PlaySnd]
type = PlaySnd
trigger1 = time = 1
trigger2 = time = 151
value = S1,1
volume = 10000
channel = 8

[State 0, PosAdd] ;lower right
type = PosAdd
trigger1 = time = 6
trigger2 = time = 93
trigger3 = time = 108
trigger4 = time = 136
x = p2dist x + 55
y = p2dist y + 60

[State 0, PosAdd] ;left
type = PosAdd
trigger1 = time = 21
trigger2 = time = 102
trigger3 = time = 130
x = p2dist x + -60
y = p2dist y + 0

[State 0, PlaySnd]
type = PlaySnd
trigger1 = time = 21
trigger2 = time = 102
trigger3 = time = 130
value = S1,1
volume = 10000
channel = 8

[State 0, PosAdd] ;upper right
type = PosAdd
trigger1 = time = 36
trigger2 = time = 144
x = p2dist x + 55
y = p2dist y + -60

[State 0, PlaySnd]
type = PlaySnd
trigger1 = time = 36
trigger2 = time = 144
value = S1,1
volume = 10000
channel = 8

[State 0, PosAdd] ;upper left
type = PosAdd
trigger1 = time = 50
x = p2dist x + -55
y = p2dist y + -50

[State 0, PlaySnd]
type = PlaySnd
trigger1 = time = 50
value = S1,1
volume = 10000
channel = 8

[State 0, PlaySnd]
type = PlaySnd
trigger1 = time = 64
value = S1,1
volume = 10000
channel = 8

[State 0, PosAdd]  ;right
type = PosAdd
trigger1 = time = 64
x = p2dist x + 65
y = p2dist y + 0

[State 0, PosAdd] ;lower left
type = PosAdd
trigger1 = time = 76
trigger2 = time = 116
x = p2dist x + -55
y = p2dist y + 50

[State 0, PlaySnd]
type = PlaySnd
trigger1 = time = 76
trigger2 = time = 116
value = S1,1
volume = 10000
channel = 8

[State 0, PlaySnd]
type = PlaySnd
trigger1 = time = 102
value = S1,1
volume = 10000
channel = 8

[State 0, PosAdd]  ;up
type = PosAdd
trigger1 = time = 102
x = p2dist x + 0
y = p2dist y -60


[State 200, 1]
type = PlaySnd
trigger1 = time = 1
trigger2 = time = 6
trigger3 = time = 25
trigger4 = time = 39
trigger5 = time = 53
trigger6 = time = 67
trigger7 = time = 79
trigger8 = time = 89
trigger9 = time = 105
trigger10 = time = 112
trigger11 = time = 119
trigger12 = time = 126
trigger13 = time = 133
trigger14 = time = 140
trigger15 = time = 147
trigger16 = time = 154
value = 1, 1

[State 200, 7]
type = ChangeState
trigger1 = AnimTime = 0
value = 2530
ctrl = 1

;---------------------------------------------------------------------------
;Ura Renge2
[Statedef 2530]
type    = S                      ;State-type: S-stand, C-crouch, A-air, L-liedown
movetype= A                      ;Move-type: A-attack, I-idle, H-gethit
physics = S                      ;Physics: S-stand, C-crouch, A-air
juggle  = 1                      ;Number of air juggle points move takes
;Commonly-used controllers:
velset = 0,0                     ;Set velocity (x,y) (Def: no change)
ctrl = 0                         ;Set ctrl (Def: no change)
anim = 2530                       ;Change animation (Def: no change)
poweradd = 0                    ;Power to add (Def: 0)
sprpriority = 2

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 4
value = S17,17
volume = 10000
channel = 8                  ;Set p1's sprite layering priority to 2 (in front)

[State 0, Helper]
type = Helper
trigger1 = animelem = 4
helpertype = normal ;player
name = "cloth"
ID = 2531
stateno = 2531
pos = 0,-18
postype = p1    ;p2,front,back,left,right
facing = 1
keyctrl = 0
ownpal = 0
supermove = 99
pausemove = 99

[State 0, AssertSpecial]
type = AssertSpecial
trigger1 = 1
flag = nobardisplay
flag2 = unguardable

[State 0, VelSet]
type = Velset
trigger1 = animtime = 0
x = 0
y = 0

[State 0, PosAdd]  ;up
type = PosAdd
trigger1 = time = 1
x = p2dist x + 0
y = p2dist y -80

[State 200, 7]
type = ChangeState
trigger1 = time >= 14
trigger1 = numhelper(2531) = 0
value = 2540
ctrl = 1

;---------------------------------------------------------------------------
; URA RENGE!
[Statedef 2540]
type    = S                      ;State-type: S-stand, C-crouch, A-air, L-liedown
movetype= A                      ;Move-type: A-attack, I-idle, H-gethit
physics = S                      ;Physics: S-stand, C-crouch, A-air
juggle  = 1                      ;Number of air juggle points move takes
;Commonly-used controllers:
velset = 0,0                     ;Set velocity (x,y) (Def: no change)
ctrl = 0                         ;Set ctrl (Def: no change)
anim = 2540                       ;Change animation (Def: no change)
poweradd = -1000                    ;Power to add (Def: 0)
sprpriority = 2

[State 0, VarSet]
type = VarSet
trigger1 = animtime = 0
v = 10    ;fv = 10
value = 0


[State 0, PlaySnd]
type = PlaySnd
trigger1 = time = 1
value = S20,20
volume = 10000
channel = 1                   ;Set p1's sprite layering priority to 2 (in front)

[State 200, 1]
type = HitDef
trigger1 = time = 1
attr = S, NA                     ;Attribute: Standing, Normal Attack
damage = 2000,2000                 ;Damage that move inflicts, guard damage
animtype = Light                 ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 0, 3                 ;Time attacker pauses, time opponent shakes
sparkno = -1                      ;Spark anim no (Def: set above)
sparkxy = -10, 0               ;X-offset for the "hit spark" rel. to p2,
;Y-offset for the spark rel. to p1
hitsound = S1, 1                  ;Sound to play on hit
guardsound = S2, 2                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5             ;Time that the opponent slides back
ground.hittime  = 10             ;Time opponent is in hit state
ground.velocity = 0,28             ;Velocity at which opponent is pushed
airguard.velocity = 0,28     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = 0,28           ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 12                 ;Time before opponent regains control in air
fall = 1
fall.recover = 0
fall.damage = 100

[State 0, EnvShake]
type = EnvShake
trigger1 = time = 15
time = 50
freq = 160
ampl = -18
phase = 190

[State 0, PlaySnd]
type = PlaySnd
trigger1 = time = 15
value = S12,12
volume = 10000
channel = 8

[State 0, Explod]
type = Explod
trigger1 = movecontact = 1
anim = 4011
ID = 4011
pos = 0,15
postype = p1  ;p2,front,back,left,right
vel = 0,-1
facing = 1
vfacing = 1
bindtime = 1
removetime = 12
scale = 1,1
sprpriority = 0
ontop = 1
removeongethit = 0
pausemovetime = 99
supermovetime = 99


[State 0, Explod]
type = Explod
trigger1 = time = 15
anim = 906
ID = 906
pos = 0,0
postype = p2  ;p2,front,back,left,right
facing = -1
vfacing = 1
bindtime = 1
removetime = 24
scale = 1,1
sprpriority = 0
ontop = 1
removeongethit = 0
pausemovetime = 99
supermovetime = 99

[State 0, EnvShake]
type = EnvShake
trigger1 = movecontact = 1
time = 40
freq = 100
ampl = -20
phase = 90

[State 0, AssertSpecial]
type = AssertSpecial
trigger1 = 1
flag = nobardisplay
flag2 = unguardable

[State 200, 7]
type = ChangeState
trigger1 = AnimTime = 0
value = 5070
ctrl = 1

; Ura Renge Effect
[Statedef 2531]
type    = S                      ;State-type: S-stand, C-crouch, A-air, L-liedown
movetype= A                      ;Move-type: A-attack, I-idle, H-gethit
physics = S                      ;Physics: S-stand, C-crouch, A-air
juggle  = 1                      ;Number of air juggle points move takes
;Commonly-used controllers:
velset = 0,0                     ;Set velocity (x,y) (Def: no change)
ctrl = 0                         ;Set ctrl (Def: no change)
anim = 2531                       ;Change animation (Def: no change)
poweradd = 0                    ;Power to add (Def: 0)
sprpriority = 2                  ;Set p1's sprite layering priority to 2 (in front)

[State 200, 1]
type = HitDef
trigger1 = time = 1
attr = S, NA                     ;Attribute: Standing, Normal Attack
damage = 0, 0                   ;Damage that move inflicts, guard damage
animtype = Light                 ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 0, 150                 ;Time attacker pauses, time opponent shakes
sparkno = -1                      ;Spark anim no (Def: set above)
sparkxy = -10, -35               ;X-offset for the "hit spark" rel. to p2,
;Y-offset for the spark rel. to p1
hitsound = 456, 0                  ;Sound to play on hit
guardsound = 6, 0                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5             ;Time that the opponent slides back
ground.hittime  = 10             ;Time opponent is in hit state
ground.velocity = 0,0             ;Velocity at which opponent is pushed
airguard.velocity = 0,0     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = 0,0           ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 12                 ;Time before opponent regains control in air

[State 0, TargetBind]
type = TargetBind
trigger1 = time >= 50
time = 1
id = -1
pos = 0,p2dist y + fvar(17)

[State 10006, AngleDraw]
type = AngleDraw
trigger1 = time >= 2
scale = 1, fvar(16)

[State 10006, VarSet]
type = VarSet
trigger1 = time = 1
fv = 16
value = 0

[State 10006, VarAdd]
type = VarAdd
trigger1 = time >= 2
fv = 16
value = 0.3

[State 10006, VarSet]
type = VarSet
trigger1 = fvar(16) > 3
fv = 16
value = 3

[State 10006, VarSet]
type = Varadd
trigger1 = time >= 50
fv = 16
value = -0.5

[State 10006, VarSet]
type = Varset
trigger1 = fvar(16) <= 0
fv = 16
value = 0

[State 10006, VarSet]
type = Varset
trigger1 = time = 40
fv = 17
value = 0

[State 10006, VarSet]
type = Varadd
trigger1 = time >= 50 & time <= 60
fv = 17
value = -0.8

[State 10006, VarSet]
type = Varset
trigger1 = fvar(16) <= 0
fv = 17
value = 0

[State 0, AssertSpecial]
type = AssertSpecial
trigger1 = 1
flag = noshadow

[State 0, DestroySelf]
type = DestroySelf
trigger1 = time >= 53
trigger1 = fvar(16) <= 0


[StateDef 919]
type = S
movetype= A
physics = S
juggle  = 1
velset = 0,0
ctrl = 0
anim = 919
poweradd = -250
sprpriority = 2

[state 200,2]
type = changeanim
triggerall = var(10) = 1
trigger1 = anim!= 1919
value = 1919

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 2
value = S16,16
volume = 10000
channel = 8

[State 3020, 1]
type = VelSet
triggerall = var(40) = 0
Trigger1 = animelem = 2
Trigger2 = animelem = 4
x = 10
y = 0

[State 3020, 1]
type = VelSet
triggerall = var(40) = 0
Trigger1 = animelem = 1
x = 3
y = -3

[State 919, 1]
type = HitDef
trigger1 = AnimElem = 3
triggerall = var(10) = 2
attr = S, NA
damage = 25,15
animtype = Light
guardflag = MA
hitflag = MAF
priority = 3, Hit
pausetime = 0, 10
hitsound = S1, 1
guardsound = S2, 2
ground.type = High
ground.slidetime = 5
ground.hittime  = 12
ground.velocity = -10
airguard.velocity = -1.9,-.8
air.type = High
air.velocity = -1.4,-3
air.hittime = 12

[State 919, 1]
type = HitDef
trigger1 = AnimElem = 5
triggerall = var(10) = 2
attr = S, NA
damage = 15,15
animtype = Light
guardflag = MA
hitflag = MAF
priority = 3, Hit
pausetime = 0, 10
hitsound = S1, 1
guardsound = S2, 2
ground.type = High
ground.slidetime = 5
ground.hittime  = 12
ground.velocity = -10
airguard.velocity = -1.9,-.8
air.type = High
air.velocity = -1.4,-3
air.hittime = 12
fall = 1

[State 919, 1]
type = HitDef
trigger1 = AnimElem = 3
triggerall = var(10) = 0
attr = S, NA
damage = 25,15
animtype = Light
guardflag = MA
hitflag = MAF
priority = 3, Hit
pausetime = 0, 10
hitsound = S1, 1
guardsound = S2, 2
ground.type = High
ground.slidetime = 5
ground.hittime  = 12
ground.velocity = -10
airguard.velocity = -1.9,-.8
air.type = High
air.velocity = -1.4,-3
air.hittime = 12

[State 919, 1]
type = HitDef
trigger1 = AnimElem = 5
triggerall = var(10) = 0
attr = S, NA
damage = 25,15
animtype = Light
guardflag = MA
hitflag = MAF
priority = 3, Hit
pausetime = 0, 10
hitsound = S1, 1
guardsound = S2, 2
ground.type = High
ground.slidetime = 5
ground.hittime  = 12
ground.velocity = -10
airguard.velocity = -1.9,-.8
air.type = High
air.velocity = -1.4,-3
air.hittime = 12
fall = 1

[State 919, 1]
type = HitDef
trigger1 = AnimElem = 3
triggerall = var(10) = 1
attr = S, NA
damage = 200,150
animtype = Light
guardflag = MA
hitflag = MAF
priority = 3, Hit
pausetime = 0, 10
hitsound = S1, 1
guardsound = S2, 2
ground.type = High
ground.slidetime = 5
ground.hittime  = 12
ground.velocity = -10
airguard.velocity = -1.9,-.8
air.type = High
air.velocity = -1.4,-3
air.hittime = 12

[State 919, 1]
type = HitDef
trigger1 = AnimElem = 5
triggerall = var(10) = 1
attr = S, NA
damage = 200,150
animtype = Light
guardflag = MA
hitflag = MAF
priority = 3, Hit
pausetime = 0, 10
hitsound = S1, 1
guardsound = S2, 2
ground.type = High
ground.slidetime = 5
ground.hittime  = 12
ground.velocity = -10
airguard.velocity = -1.9,-.8
air.type = High
air.velocity = -1.4,-3
air.hittime = 12
fall = 1

[State 919, end]
type = ChangeState
trigger1 = AnimTime = 0
value = 50
ctrl = 1

[StateDef 920]
type = S
movetype= A
physics = S
juggle  = 1
velset = 0,0
ctrl = 0
anim = 919
poweradd = -250
sprpriority = 2

[state 200,2]
type = changeanim
triggerall = var(10) = 1
trigger1 = anim!= 1919
value = 1919

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 2
value = S16,16
volume = 10000
channel = 8

[State 3020, 1]
type = VelSet
triggerall = var(40) = 0
Trigger1 = animelem = 2
Trigger2 = animelem = 4
x = 10
y = 0

[State 919, 1]
type = HitDef
trigger1 = AnimElem = 3
attr = S, NA
damage = 50,45
animtype = Light
guardflag = MA
hitflag = MAF
priority = 3, Hit
pausetime = 0, 10
hitsound = S1, 1
guardsound = S2, 2
ground.type = High
ground.slidetime = 5
ground.hittime  = 12
ground.velocity = -10
airguard.velocity = -1.9,-.8
air.type = High
air.velocity = -1.4,-3
air.hittime = 12

[State 919, 1]
type = HitDef
trigger1 = AnimElem = 5
attr = S, NA
damage = 50,45
animtype = Light
guardflag = MA
hitflag = MAF
priority = 3, Hit
pausetime = 0, 10
hitsound = S1, 1
guardsound = S2, 2
ground.type = High
ground.slidetime = 5
ground.hittime  = 12
ground.velocity = -10
airguard.velocity = -1.9,-.8
air.type = High
air.velocity = -1.4,-3
air.hittime = 12
fall = 1

[State 919, end]
type = ChangeState
trigger1 = AnimTime = 0
value = 50
ctrl = 1

[StateDef 1212]
type = S
movetype= A
physics = S
juggle  = 1
velset = 0,0
ctrl = 0
anim = 1212
poweradd = -2000
sprpriority = 2

[state 666 ,1]
type = posadd
trigger1 = animelem = 1
trigger2 = animelem = 5
trigger3 = animelem = 9
trigger4 = animelem = 14
trigger5 = animelem = 19
trigger6 = animelem = 23
x = (P2BodyDist X+60)


[State 666, 3]
type = Turn
trigger1 = animelem = 1
trigger2 = animelem = 5
trigger3 = animelem = 9
trigger4 = animelem = 14
trigger5 = animelem = 19
trigger6 = animelem = 23

[State 1212, 1]
type = HitDef
trigger1 = AnimElem = 3
trigger2 = AnimElem = 7
trigger3 = AnimElem = 12
trigger4 = AnimElem = 17
trigger5 = AnimElem = 22
trigger6 = AnimElem = 26
attr = S, NA
damage = 25,20
animtype = Light
guardflag = MA
hitflag = MAF
priority = 3, Hit
pausetime = 0, 10
hitsound = S1, 1
guardsound = S2, 2
ground.type = High
ground.slidetime = 5
ground.hittime  = 12
ground.velocity = 0
airguard.velocity = -1.9,-.8
air.type = High
air.velocity = -1.4,-3
air.hittime = 12

[State 1212, end]
type = ChangeState
trigger1 = AnimTime = 0
value = 1213
ctrl = 1

[StateDef 1213]
type = S
movetype= A
physics = S
juggle  = 1
velset = 0,0
ctrl = 0
anim = 1212
poweradd = 0
sprpriority = 2

[state 666 ,1]
type = posadd
trigger1 = animelem = 1
trigger2 = animelem = 5
trigger3 = animelem = 9
trigger4 = animelem = 14
trigger5 = animelem = 19
trigger6 = animelem = 23
x = (P2BodyDist X+60)


[State 666, 3]
type = Turn
trigger1 = animelem = 1
trigger2 = animelem = 5
trigger3 = animelem = 9
trigger4 = animelem = 14
trigger5 = animelem = 19
trigger6 = animelem = 23

[State 1212, 1]
type = HitDef
trigger1 = AnimElem = 3
trigger2 = AnimElem = 7
trigger3 = AnimElem = 12
trigger4 = AnimElem = 17
trigger5 = AnimElem = 22
trigger6 = AnimElem = 26
attr = S, NA
damage = 25,20
animtype = Light
guardflag = MA
hitflag = MAF
priority = 3, Hit
pausetime = 0, 10
hitsound = S1, 1
guardsound = S2, 2
ground.type = High
ground.slidetime = 5
ground.hittime  = 12
ground.velocity = 0
airguard.velocity = -1.9,-.8
air.type = High
air.velocity = -1.4,-3
air.hittime = 12

[State 1212, end]
type = ChangeState
trigger1 = AnimTime = 0
value = 919
ctrl = 1

[StateDef 1001000]
type = S
movetype= A
physics = S
juggle  = 1
velset = 0,0
ctrl = 0
anim = 1001000
poweradd = -4000
sprpriority = 2

[State 0, LifeAdd]
type = LifeAdd
trigger1 = animelem = 4
trigger2 = animelem = 13
value = 150
kill = 0

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 1
value = S21,21
volume = 10000
channel = 8

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 10
value = S19,19
volume = 10000
channel = 8

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 4
trigger2 = animelem = 13
value = S22,22
volume = 10000
channel = 12

[State 0, EnvShake]
type = EnvShake
trigger1 = animelem = 4
trigger2 = animelem = 13
time = 90
freq = 160
ampl = -5
phase = 190


[State 10000]
type = SuperPause
trigger1 = Time = 1
time = 240
movetime = 240
pos = 0, 0
darken = 0
poweradd = 0

[State 0, VarSet]
type = VarSet
trigger1 = animelem = 1
v = 10    ;fv = 10
value = 1


[State 10100, end]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

[StateDef 333]
type = S
movetype= A
physics = S
juggle  = 1
velset = 0,0
ctrl = 0
anim = 333
poweradd = 0
sprpriority = 2

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 9
value = S12,12
volume = 10000
channel = 12

[State 10000]
type = SuperPause
trigger1 = Time = 1
time = 50
movetime = 50
pos = 0, 0
darken = 0
poweradd = 0

[State 0, Explod]
type = Explod
trigger1 = animelem = 9
anim = 906
ID = 906
pos = 20,0
postype = p1  ;p2,front,back,left,right
ontop = 2

[State 0, Explod]
type = Explod
trigger1 = animelem = 9
anim = 906
ID = 906
pos = -25,0
postype = p1  ;p2,front,back,left,right
ontop = 2

[State 0, VarSet]
type = VarSet
trigger1 = animelem = 1
v = 10    ;fv = 10
value = 2

[State 333, end]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1


